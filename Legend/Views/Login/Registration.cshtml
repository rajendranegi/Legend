@model LegendBLL.RegistrationModel

@{
    ViewBag.Title = "Registration";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @*@Scripts.Render("~/bundles/jquery")*@
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/respond.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
</head>
<body>
    <header>
        <div class="navbar navbar-default" role="navigation">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <div class="navbar-brand" style="padding: 10px;">
                        <img src="~/Images/UID.png" alt="UID" class="img-responsive" />
                    </div>
                </div>
                <div class="navbar-collapse collapse">

                    <ul class='nav navbar-nav navbar-right'>
                        <li><a><i class='fa fa-user'></i> Welcome, Guest </a></li>
                    </ul>
                    @*@Html.Partial("_LoginPartial")*@
                </div>
            </div>
        </div>
    </header>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="panel panel-primary" style="height: auto; overflow: auto;">
                <div class="panel-heading clearfix">
                    <div class="col-xs-12">
                        <div class="col-xs-6 text-left">
                            Registration
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-3">                            
                            @Html.LabelFor(model => model.SalutationID, "Salutation", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.SalutationID, Model.SalutationList, htmlAttributes: new { @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })*@
                            @*<select ID="ddlSalutation" CssClass="form-control input-sm">
                                <option>Select Salutation</option>
                                    <option> Value="Mr.">Mr.</option>
                                    <option> Value="Miss.">Miss.</option>
                                    <option> Value="Mrs.">Mrs.</option>
                                    <option> Value="Dr.">Dr.</option>
                                    <option> Value="M/S">M/S</option>
                            </select>*@
                        </div>
                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.FirstName,"First Name", htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.MiddleName,"Middle Name", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", placeholder = "Middle Name" } })
                        </div>
                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.CountryID, "Country", htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.DropDownListFor(model => model.CountryID,Model.CountryList, htmlAttributes : new { @class = "form-control", onchange = "onCountryChangeBindState();"})
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.StateID, "State", htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.DropDownListFor(model => model.StateID, Model.StateList, htmlAttributes: new { @class = "form-control", onchange = "onStateChangeBindCity();" })
                            @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.CityID, "City", htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.DropDownListFor(model => model.CityID,Model.CityList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.Pincode, "Pincode", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Pincode, Model.Pincode, new { htmlAttributes = new { @class = "form-control", placeholder = "Pin Code" } })                            
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", autocomplete="off", placeholder = "User Name" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })<span style="color:red">&nbsp;*</span>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "Password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.PasswordCompare,"Re-enter Password", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PasswordCompare, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "Password" } })
                            @Html.ValidationMessageFor(model => model.PasswordCompare, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="panel-footer clearfix">
                    <div class="col-xs-12">
                        <div class="btn-group pull-right">
                            @Html.ActionLink("Back to Login", "Index", "Login", htmlAttributes: new { @class = "btn btn-default" })
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>

    </div>

   
</body>

</html>


    <script type="text/javascript">
        $(document).ready(function () {
            
        });

        function onCountryChangeBindState()
        {
            
            var countryId = $('#CountryID').val();
            $('#StateID').html('');
            var procemessage = "<option value='0'> Please wait...</option>";
            $('#StateID').html(procemessage).show();
            var url = '@Url.Action("GetSelectedState4Country")'; // "/City/GetSelectedState4COuntry";

            $.ajax({
                url: url,
                data: { Id: countryId },
                cache: false,
                type: "POST",
                success: function (data) {

                    var markup = "<option value='0'>Select</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $('#StateID').html('');
                    $('#StateID').html(markup).show();
                },
                error: function (reponse) {
                    alert(JSON.parse(reponse));
                    alert("error : " + reponse);
                }
            });

        }

        function onStateChangeBindCity() {
           
            var StateID = $('#StateID').val();
            $('#CityID').html('');
            var procemessage = "<option value='0'> Please wait...</option>";
            $('#CityID').html(procemessage).show();
            var url = '@Url.Action("GetSelectedCity4State")'; // "/City/GetSelectedState4COuntry";

            $.ajax({
                url: url,
                data: { Id: StateID },
                cache: false,
                type: "POST",
                success: function (data) {

                    var markup = "<option value='0'>Select</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $('#CityID').html('');
                    $('#CityID').html(markup).show();
                },
                error: function (reponse) {
                    alert(JSON.parse(reponse));
                    alert("error : " + reponse);
                }
            });

        }
    </script>